#!/bin/sh

help() {
  printf "A tool to download and play YouTube videos\n"
  printf "Usage: %s [-h] [-qp] URL\n" "$0"
  printf "\n"
  printf "FLAGS:\n"
  printf "\t-h\tShow this help description\n"
  printf "\t-p\tPlay the video automatically after downloading it\n"
  printf "\t-q\tQuiet mode, minimise output\n"
  exit 2
}

while getopts 'mpq' flag; do
  case "$flag" in
    m) MAX_QUALITY=true;;
    p) PLAY_NOW=true;;
    q) QUIET=true;;
    *) help;;
  esac
done
shift $((OPTIND - 1))


if [ -z "$1" ]; then # No url to play
  help
fi

url="$1"
player="mpv --geometry=50%:50% --autofit-larger=90%x90%"

dir="$HOME/Videos"
videoname=$(youtube-dl --get-title "$url" \
  | sed 's/\ /_/g' \
  | sed "s/['\"]//g" \
  | sed 's+[/\]+|+g' \
  | sed 's/[!:]//g')
date=$(date +"%Y-%m-%d")
output="$dir/$date/$videoname"

DL_FLAGS="--continue --no-playlist"

if [ ! "$MAX_QUALITY" = true ]; then # Max quality is default
  QUALITY="bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio"
  DL_FLAGS="$DL_FLAGS --format=$QUALITY"
fi

if [ "$QUIET" = true ]; then
  player="$player --really-quiet"
fi

existing_file=$(find "$dir" -name "*${videoname}.*")
if [ -z "$existing_file" ]; then
  if [ "$QUIET" = true ]; then
    youtube-dl $DL_FLAGS --quiet --output="$output" "$url"
  else
    echo "Downloading video..."
    youtube-dl $DL_FLAGS --output="$output" "$url"
  fi;

  # Clean up eventual .part files
  part_file=$(find "$dir" -name "*${videoname}*.part$")
  if [ -f "$part_file" ]; then
    rm "$part_file"
  fi
else
  echo "Video already downloaded"
  output="$existing_file"
fi

output=$(find "$dir" -name "*${videoname}.*")
[ "$PLAY_NOW" = true ] && $player "$output"
exit 0
